package routines;

import org.apache.commons.lang3.math.NumberUtils;
import java.util.Random;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;

// Each method could have only one input parameter of type String
// Inside the input parameters are concatenated a standard parameters (entityID and value before masking)and parameters defined by user in maskingRules table


public class MaskingMethods {   
// =============================================
// Author:		Piotr K
// Create date: 2023-04-14
// Description:	returnRandomStringGivenLength(<String EntityID, String currentValue>, int minLength, int maxLength)
// 				parameters in <> are given by masking engine, parameters defined in control tables are concatenated after them. 
//				Method return a random String. Length of the string is between two given parameters. 
// =============================================
	public static String returnRandomStringGivenLength(String params) {		
		String[] args = params.split("\\;");
		int minLength = NumberUtils.toInt(args[2]);
		int maxLength = NumberUtils.toInt(args[3]);		
		Random random = new Random();		
		String ran = DataMasking.createRandomString(random.nextInt(minLength, maxLength));
        return ran;
    }	

// =============================================
// Author:		Piotr K
// Create date: 2023-04-17
// Description:	returnRandomIntRange(<String EntityID, String currentValue>, int minValue, int maxValue)
//	 			parameters in <> are given by masking engine, parameters defined in control tables are concatenated after them. 
//				Method return a random int. Value of the int is between given parameters, minValue inclusive, maxValue exclusive. 
//				minValue <= random < maxValue

// =============================================
		public static int returnRandomIntRange(String params) {		
			String[] args = params.split("\\;");
			int minLength = NumberUtils.toInt(args[2]);
			int maxLength = NumberUtils.toInt(args[3]);		
			Random random = new Random();		
			int ran = random.nextInt(minLength, maxLength);
	        return ran;
	    }	
// =============================================
// Author:		Piotr K
// Create date: 2023-04-17
// Description:	returnRandomIntRange(<String EntityID, String currentValue>, int minValue, int maxValue)
//	 			parameters in <> are given by masking engine, parameters defined in control tables are concatenated after them. 
//				Method return a random int. Value of the int is between given parameters, minValue inclusive, maxValue exclusive. 
//				minValue <= random < maxValue
// AGR14823813 Date: 1981-09-18
// =============================================
			public static String ChangeDayAndMonth(String params) {		
				String[] args = params.split("\\;");
				System.out.println("Entity: " +args[0] +" Date: " +args[1]);				
				GregorianCalendar gc = new GregorianCalendar();
				String yearName = args[1];
				String yearName2 = yearName.substring(0, 4);
				int year = NumberUtils.toInt(yearName2);
		        gc.set(gc.YEAR, year);
		        int dayOfYear = randBetween(1, gc.getActualMaximum(gc.DAY_OF_YEAR));
		        gc.set(gc.DAY_OF_YEAR, dayOfYear);
		        String result = "2020-01-01";
		        //System.out.println(" New date:" + gc.get(gc.YEAR) + "-" + (gc.get(gc.MONTH) + 1) + "-" + gc.get(gc.DAY_OF_MONTH));
		        Date date = gc.getTime();
		        DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
		        String strDate = dateFormat.format(date);  
		        System.out.println(strDate);
		        return result;
		    }	
		  private static int randBetween(int start, int end) {
		        return start + (int)Math.round(Math.random() * (end - start));
		    }
					
		
}
